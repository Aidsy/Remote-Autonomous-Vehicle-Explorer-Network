
unsigned int yawDeg;
unsigned int pitchDeg;
unsigned int rollDeg;
unsigned int omegazero;
unsigned int omegaone;
unsigned int omegatwo;

void printdata(void)
{    
      //Serial.print("!");

      #if PRINT_EULER == 1
      Serial.print("#");
      Serial.print(ToDeg(yaw));
      Serial.print(",");
      //Serial.print((long)(100*(ToDeg(yaw))));
      Serial.print(",");
      Serial.print(ToDeg(pitch));
      //Serial.print((long)(100*(ToDeg(pitch))));
      Serial.print(",");
      Serial.print(ToDeg(roll));
      //Serial.print((long)(100*(ToDeg(roll))));
      Serial.print(",");
      Serial.print(ToDeg(Omega[0]));
      Serial.print(",");
      Serial.print(ToDeg(Omega[1]));
      Serial.print(",");
      Serial.print(ToDeg(Omega[2]));
      Serial.print("!");
      Serial.println();
      #endif

      #if PRINT_RAZORDATA ==1
      Serial.write(0xFF);  
      Serial.write(0xFF);
      Serial.write(0xFF);
      Print_Razordata();
      #endif;

      
      #if PRINT_ANALOGS==1
      Serial.print(",AN:");
      Serial.print(AN[sensors[0]]);  //(int)read_adc(0)
      Serial.print(",");
      Serial.print(AN[sensors[1]]);
      Serial.print(",");
      Serial.print(AN[sensors[2]]);  
      Serial.print(",");
      Serial.print(ACC[0]);
      Serial.print (",");
      Serial.print(ACC[1]);
      Serial.print (",");
      Serial.print(ACC[2]);
      Serial.print(",");
      Serial.print(magnetom_x);
      Serial.print (",");
      Serial.print(magnetom_y);
      Serial.print (",");
      Serial.print(magnetom_z);      
      #endif
      /*#if PRINT_DCM == 1
      Serial.print (",DCM:");
      Serial.print(convert_to_dec(DCM_Matrix[0][0]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[0][1]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[0][2]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[1][0]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[1][1]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[1][2]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[2][0]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[2][1]));
      Serial.print (",");
      Serial.print(convert_to_dec(DCM_Matrix[2][2]));
      #endif*/
      //Serial.println();    
      
}

long convert_to_dec(float x)
{
  return x*10000000;
}

void Print_Razordata(){
  yawDeg = (unsigned int)((ToDeg(yaw)*100)+20000);
  pitchDeg = (unsigned int)((ToDeg(pitch)*100)+20000);
  rollDeg = (unsigned int)((ToDeg(roll)*(-1)*100)+20000);
  omegazero = (unsigned int)((ToDeg(Omega[0])*10)+20000);
  omegaone = (unsigned int)((ToDeg(Omega[1])*10)+20000);
  omegatwo = (unsigned int)((ToDeg(Omega[2])*10)+20000);
  Serial.write((uint8_t *) &yawDeg ,2);
  Serial.write((uint8_t *) &pitchDeg,2);
  Serial.write((uint8_t *) &rollDeg,2);
  Serial.write((uint8_t *) &omegazero,2);
  Serial.write((uint8_t *) &omegaone,2);
  Serial.write((uint8_t *) &omegatwo,2);
  //Serial.write((uint8_t *) &accel_x,2);
  //Serial.write((uint8_t *) &accel_y,2);
  //Serial.write((uint8_t *) &accel_z,2);
}

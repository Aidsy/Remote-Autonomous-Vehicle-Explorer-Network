function retStruct = getRF(serialID, handles)
retStruct = handles;

% definitions
START_DELIM = 126;
RX_PACKET_T = 144;

% if there is nothing to read, do nothing and return
if(serialID.BytesAvailable == 0)
    retStruct = handles;
    return
end

% otherwise we scan for a start delimeter
while(serialID.BytesAvailable > 0)
    thisByte = fread(serialID,1);
    if thisByte == START_DELIM
        % read lengthH, lengthL, and discard
        fread(serialID,2);
        packetT = fread(serialID,1);
        if packetT == RX_PACKET_T
            break;
        end
    end
end

% if we got here we found a receive packet, read all bytes in
% first read bytes we don't care about
fread(serialID,11);

% now parse the payload
unitIdentifier = fread(serialID,1);
% leader
yaw = fread(serialID,1);
%yaw = hex2dec([yaw(1) yaw(2)]);
pitch = fread(serialID,1);
%pitch = hex2dec([pitch(1) pitch(2)]);
roll = fread(serialID,1);
%roll = hex2dec([roll(1) roll(2)]);
vX = fread(serialID,1);
vY = fread(serialID,2);
vZ = fread(serialID,3);
alt = fread(serialID,2);
alt = hex2dec([alt(1) alt(2)]);
bat = fread(serialID,1);
IR = zeros(1,4);
IR(1) = fread(serialID,1);
IR(2) = fread(serialID,1);
IR(3) = fread(serialID,1);
IR(4) = fread(serialID,1);

switch unitIdentifier
    case 1
        retStruct.lead_yaw = yaw;
        retStruct.lead_yaw = yaw;
        retStruct.lead_yaw = yaw;
        retStruct.lead_yaw = yaw;
        retStruct.lead_yaw = yaw;
        retStruct.lead_yaw = yaw;retStruct.lead_yaw = yaw;
    case 2
        % follower
    otherwise
        % do nothing
end

retStruct = handles;

end